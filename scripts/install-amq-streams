#!/bin/bash

set -e

echo "installing operator..."
cat <<EOF | oc apply -f -
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  annotations:
    include.release.openshift.io/self-managed-high-availability: "true"
    olm.providedAPIs: Kafka.v1beta2.kafka.strimzi.io,KafkaBridge.v1beta2.kafka.strimzi.io,KafkaConnect.v1beta2.kafka.strimzi.io,KafkaConnectS2I.v1beta2.kafka.strimzi.io,KafkaConnector.v1beta2.kafka.strimzi.io,KafkaMirrorMaker.v1beta2.kafka.strimzi.io,KafkaMirrorMaker2.v1beta2.kafka.strimzi.io,KafkaRebalance.v1beta2.kafka.strimzi.io,KafkaTopic.v1beta2.kafka.strimzi.io,KafkaUser.v1beta2.kafka.strimzi.io
  name: global-operators
  namespace: openshift-operators
spec: {}
status: {}
---
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  labels:
    operators.coreos.com/amq-streams.openshift-operators: ""
  name: amq-streams
  namespace: openshift-operators
spec:
  channel: stable
  installPlanApproval: Automatic
  name: amq-streams
  source: redhat-operators
  sourceNamespace: openshift-marketplace
  startingCSV: amqstreams.v1.7.3
status: {}
EOF

echo -n "waiting for CSV to appear..."
while [ $(oc get csv -n openshift-operators --no-headers 2>/dev/null | grep amqstreams | grep " Succeeded" | wc -l) -lt 1 ]; do
  echo -n "."
  sleep 10
done
echo "done"

echo -n "waiting for kafkas api-resource to appear..."
while [ $(oc api-resources|grep '^kafkas' | wc -l) -lt 1 ]; do
  echo -n "."
  sleep 10
done
echo "done"

echo "creating Kafka cluster..."
cat <<EOF | oc apply -f -
apiVersion: v1
kind: Namespace
metadata:
  name: ach
spec:
  finalizers:
  - kubernetes
status: {}
---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: my-cluster
  namespace: ach
spec:
  entityOperator:
    topicOperator: {}
    userOperator: {}
  kafka:
    config:
      inter.broker.protocol.version: '2.7'
      log.message.format.version: '2.7'
      offsets.topic.replication.factor: 3
      transaction.state.log.min.isr: 2
      transaction.state.log.replication.factor: 3
    listeners:
      - name: plain
        port: 9092
        tls: false
        type: internal
      - name: tls
        port: 9093
        tls: true
        type: internal
    replicas: 3
    storage:
      type: ephemeral
    version: 2.7.0
  zookeeper:
    replicas: 3
    storage:
      type: ephemeral
status: {}
EOF
